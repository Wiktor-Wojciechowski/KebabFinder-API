{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "description": "This is the API documentation for the project.",
        "contact": {
            "email": "support@example.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User Registration",
                "description": "Registers a new user and returns an authentication token.",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/user-login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User Login",
                "description": "Logs in a user and returns an authentication token.",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/admin-login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Admin Login",
                "description": "Logs in an admin and returns an authentication token.",
                "operationId": "loginAdmin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/logout-from-all": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User Logout",
                "description": "Logs out the currently authenticated user and invalidates their tokens.",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/comments": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Get all user's comments",
                "description": "Get all comments belonging to the authenticated user.",
                "operationId": "57468ee662aad477bea96c8d0a63e494",
                "responses": {
                    "200": {
                        "description": "List of comments"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/kebabs/{kebab}/comments": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Get all comments for a specific kebab",
                "description": "Get all comments for a specific kebab.",
                "operationId": "e25417f0243f90f94546a0bff63bf7b2",
                "parameters": [
                    {
                        "name": "kebab",
                        "in": "path",
                        "description": "ID of the kebab",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of comments"
                    },
                    "404": {
                        "description": "Kebab not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Comments"
                ],
                "summary": "Add a new comment to a kebab",
                "description": "Add a new comment to a specific kebab.",
                "operationId": "ab65efa23dedbf890921ad60a457866e",
                "parameters": [
                    {
                        "name": "kebab",
                        "in": "path",
                        "description": "ID of the kebab",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "example": "Great kebab!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment added successfully"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/comments/{comment}": {
            "put": {
                "tags": [
                    "Comments"
                ],
                "summary": "Edit user's comment",
                "description": "Edit a comment belonging to the authenticated user.",
                "operationId": "706025f7ca2d2b7bf54602535ccd20b1",
                "parameters": [
                    {
                        "name": "comment",
                        "in": "path",
                        "description": "ID of the comment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "example": "Updated comment text"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comment updated successfully"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Comment not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Comments"
                ],
                "summary": "Remove user's comment",
                "description": "Remove a comment belonging to the authenticated user.",
                "operationId": "82a74e5a6dacd6f3a96ef638568fbafe",
                "parameters": [
                    {
                        "name": "comment",
                        "in": "path",
                        "description": "ID of the comment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Comment deleted successfully"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Comment not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admin/delete-comment/{comment}": {
            "delete": {
                "tags": [
                    "Comments"
                ],
                "summary": "Admin can remove any comment",
                "description": "Admin can remove any comment.",
                "operationId": "75bb4e82946cf71881c73c9288f35357",
                "parameters": [
                    {
                        "name": "comment",
                        "in": "path",
                        "description": "ID of the comment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Comment deleted successfully"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Comment not found"
                    }
                },
                "security": [
                    {
                        "sanctum": [],
                        "admin": []
                    }
                ]
            }
        },
        "/api/kebabs/{kebab}/favourite": {
            "post": {
                "tags": [
                    "Favourites"
                ],
                "summary": "Add a kebab to favourites",
                "description": "Add a kebab to the authenticated user's favourites.",
                "operationId": "d511356f4ec87fc4f140481213a45a6b",
                "parameters": [
                    {
                        "name": "kebab",
                        "in": "path",
                        "description": "ID of the kebab",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Kebab added to favourites"
                    },
                    "409": {
                        "description": "Already in favourites"
                    },
                    "404": {
                        "description": "Kebab not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Favourites"
                ],
                "summary": "Remove a kebab from favourites",
                "description": "Remove a kebab from the authenticated user's favourites.",
                "operationId": "b0d89d10a5f1d9c8fb652b8d8ea2d4b6",
                "parameters": [
                    {
                        "name": "kebab",
                        "in": "path",
                        "description": "ID of the kebab",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Kebab removed from favourites"
                    },
                    "404": {
                        "description": "Kebab not found in favourites"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/favourites": {
            "get": {
                "tags": [
                    "Favourites"
                ],
                "summary": "Get all favourite kebabs",
                "description": "Get all favourite kebabs of the authenticated user.",
                "operationId": "fa3163c2179b2909e62d9d14a3f1dea3",
                "responses": {
                    "200": {
                        "description": "List of favourite kebabs"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/kebabs/{kebab}/glovo-refresh-review": {
            "post": {
                "tags": [
                    "Kebabs",
                    "Glovo"
                ],
                "summary": "Get restaurant rating for a specific kebab",
                "description": "Fetches the rating of a restaurant from Glovo using the kebab's link.",
                "operationId": "c7f29ecd8af81710427fe86d8852f262",
                "parameters": [
                    {
                        "name": "kebab",
                        "in": "path",
                        "description": "ID of the kebab",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant rating",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "rating": {
                                            "type": "string",
                                            "example": "89%"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Kebab not found or link missing"
                    },
                    "400": {
                        "description": "Invalid Glovo link"
                    }
                }
            }
        },
        "/api/kebabs/{kebab}/google-refresh-review": {
            "post": {
                "tags": [
                    "Kebabs",
                    "Google"
                ],
                "summary": "Get restaurant details from Google Places",
                "description": "Fetches details such as rating and address of a kebab restaurant using its name and location.",
                "operationId": "da6c4abe27a57e21c5fb58fe8515ced5",
                "parameters": [
                    {
                        "name": "kebab",
                        "in": "path",
                        "description": "ID of the kebab",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "Kebab King"
                                        },
                                        "rating": {
                                            "type": "number",
                                            "example": 4.5
                                        },
                                        "address": {
                                            "type": "string",
                                            "example": "123 Main St, Legnica"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Kebab not found"
                    },
                    "400": {
                        "description": "Invalid kebab data"
                    }
                }
            }
        },
        "/api/kebabs/{kebab}": {
            "get": {
                "tags": [
                    "Kebabs"
                ],
                "summary": "Get details of a specific kebab",
                "description": "Returns the details of a specific kebab including associated sauces, meat types, social media links, opening hours, and order methods.",
                "operationId": "32ee6dc78062fe1f2141b574aa0038b7",
                "parameters": [
                    {
                        "name": "kebab",
                        "in": "path",
                        "description": "Kebab ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Kebab details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Kebab"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Kebab not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Kebabs"
                ],
                "summary": "Update an existing kebab",
                "description": "Updates the details of an existing kebab along with its associated entities like sauces, meats, social media links, opening hours, and order methods.",
                "operationId": "2104d9fd92521b8652074c8057648d9d",
                "parameters": [
                    {
                        "name": "kebab",
                        "in": "path",
                        "description": "Kebab ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "address",
                                    "coordinates",
                                    "status",
                                    "is_craft",
                                    "building_type",
                                    "is_chain"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "The name of the kebab",
                                        "type": "string"
                                    },
                                    "address": {
                                        "description": "The address of the kebab",
                                        "type": "string"
                                    },
                                    "coordinates": {
                                        "description": "Coordinates of the kebab (latitude,longitude)",
                                        "type": "string"
                                    },
                                    "logo_link": {
                                        "description": "URL of the logo (optional)",
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "open_year": {
                                        "description": "Year the kebab opened (optional)",
                                        "type": "integer"
                                    },
                                    "closed_year": {
                                        "description": "Year the kebab closed (optional)",
                                        "type": "integer"
                                    },
                                    "status": {
                                        "description": "The status of the kebab",
                                        "type": "string",
                                        "enum": [
                                            "open",
                                            "closed",
                                            "planned"
                                        ]
                                    },
                                    "is_craft": {
                                        "description": "Whether the kebab is a craft kebab",
                                        "type": "boolean"
                                    },
                                    "building_type": {
                                        "description": "The type of building where the kebab is located",
                                        "type": "string"
                                    },
                                    "pyszne_pl_link": {
                                        "description": "Link to pyszne.pl for rating",
                                        "type": "string",
                                        "example": "https://www.pyszne.pl/menu/kebab-piri-piri-szkolna"
                                    },
                                    "glovo_link": {
                                        "description": "Link to glovoapp.com for rating",
                                        "type": "string",
                                        "example": "https://glovoapp.com/pl/pl/legnica/piri-piri-kebab-legnica-lga/"
                                    },
                                    "is_chain": {
                                        "description": "Whether the kebab is part of a chain",
                                        "type": "boolean"
                                    },
                                    "sauces": {
                                        "description": "List of sauce types associated with the kebab",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "meats": {
                                        "description": "List of meat types associated with the kebab",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "social_media_links": {
                                        "description": "Social media links for the kebab",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uri"
                                        }
                                    },
                                    "opening_hours": {
                                        "description": "Opening hours for the kebab",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "order_ways": {
                                        "description": "Order methods for the kebab",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Kebab updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Kebab updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Kebab not found"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Kebabs"
                ],
                "summary": "Delete a kebab",
                "description": "Deletes a kebab by its ID.",
                "operationId": "118c8c495f6de8a0b5e119bc34fda9ca",
                "parameters": [
                    {
                        "name": "kebab",
                        "in": "path",
                        "description": "Kebab ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Kebab deleted successfully"
                    },
                    "404": {
                        "description": "Kebab not found"
                    }
                }
            }
        },
        "/api/kebabs": {
            "get": {
                "tags": [
                    "Kebabs"
                ],
                "summary": "Get a list of all kebabs",
                "description": "Returns a list of all kebabs along with their associated data.",
                "operationId": "f13582052e1a5f54f3290ffedc53507b",
                "responses": {
                    "200": {
                        "description": "List of kebabs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Kebab"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Kebabs"
                ],
                "summary": "Create a new kebab",
                "description": "Creates a new kebab with the provided data and associates related entities like sauces, meats, social media links, opening hours, and order methods.",
                "operationId": "695cc21d8dd138348f5947647c76d780",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "address",
                                    "status",
                                    "coordinates",
                                    "is_craft",
                                    "is_chain",
                                    "building_type",
                                    "sauces",
                                    "meats",
                                    "social_media_links",
                                    "opening_hours",
                                    "order_ways"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "The name of the kebab",
                                        "type": "string",
                                        "example": "Sample Kebab Place"
                                    },
                                    "address": {
                                        "description": "The address of the kebab",
                                        "type": "string",
                                        "example": "123 Kebab St, Kebab City"
                                    },
                                    "coordinates": {
                                        "description": "Coordinates of the kebab (latitude,longitude)",
                                        "type": "string",
                                        "example": "51.5074, -10.1278"
                                    },
                                    "logo_link": {
                                        "description": "URL of the logo (optional)",
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://example.com"
                                    },
                                    "open_year": {
                                        "description": "Year the kebab opened",
                                        "type": "integer",
                                        "example": 1999
                                    },
                                    "closed_year": {
                                        "description": "Year the kebab closed",
                                        "type": "integer",
                                        "example": 2020
                                    },
                                    "status": {
                                        "description": "The status of the kebab",
                                        "type": "string",
                                        "enum": [
                                            "open",
                                            "closed",
                                            "planned"
                                        ],
                                        "example": "open"
                                    },
                                    "is_craft": {
                                        "description": "Whether the kebab is a craft kebab",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "building_type": {
                                        "description": "The type of building where the kebab is located",
                                        "type": "string",
                                        "example": "domek"
                                    },
                                    "pyszne_pl_link": {
                                        "description": "Link to pyszne.pl for rating",
                                        "type": "string",
                                        "example": "https://www.pyszne.pl/menu/kebab-piri-piri-szkolna0"
                                    },
                                    "glovo_link": {
                                        "description": "Link to glovoapp.com for rating",
                                        "type": "string",
                                        "example": "https://glovoapp.com/pl/pl/legnica/piri-piri-kebab-legnica-lga/"
                                    },
                                    "is_chain": {
                                        "description": "Whether the kebab is part of a chain",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "sauces": {
                                        "description": "List of sauce types associated with the kebab",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2
                                        ]
                                    },
                                    "meats": {
                                        "description": "List of meat types associated with the kebab",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            2,
                                            4
                                        ]
                                    },
                                    "social_media_links": {
                                        "description": "Social media links for the kebab",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "example": [
                                            "https://facebook.com/samplekebab",
                                            "https://instagram.com/samplekebab"
                                        ]
                                    },
                                    "opening_hours": {
                                        "description": "Opening hours for the kebab",
                                        "type": "object",
                                        "example": {
                                            "monday": {
                                                "open": "10:00",
                                                "close": "22:00"
                                            },
                                            "tuesday": {
                                                "open": "10:00",
                                                "close": "22:00"
                                            },
                                            "wednesday": {
                                                "open": "10:00",
                                                "close": "22:00"
                                            },
                                            "thursday": {
                                                "open": "10:00",
                                                "close": "22:00"
                                            },
                                            "friday": {
                                                "open": "10:00",
                                                "close": "23:00"
                                            }
                                        },
                                        "additionalProperties": {
                                            "properties": {
                                                "open": {
                                                    "type": "string",
                                                    "example": "10:00"
                                                },
                                                "close": {
                                                    "type": "string",
                                                    "example": "22:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "order_ways": {
                                        "description": "Order methods for the kebab",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "app_name": {
                                                    "description": "The name of the app",
                                                    "type": "string",
                                                    "example": "UberEats"
                                                },
                                                "phone_number": {
                                                    "description": "Phone number for orders",
                                                    "type": "string",
                                                    "example": "123-456-789"
                                                },
                                                "website": {
                                                    "description": "Website URL for the app",
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://ubereats.com/samplekebab"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            {
                                                "app_name": "UberEats",
                                                "phone_number": "123-456-789",
                                                "website": "https://ubereats.com/samplekebab"
                                            },
                                            {
                                                "app_name": "DoorDash",
                                                "phone_number": null,
                                                "website": "https://doordash.com/samplekebab"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Kebab created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Kebab created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data provided"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    }
                }
            }
        },
        "/api/meattypes": {
            "get": {
                "tags": [
                    "MeatTypes"
                ],
                "summary": "Get all meat types",
                "operationId": "4c7d593ade65bc44f8b9a9f9bc87a9b1",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all meat types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MeatType"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "MeatTypes"
                ],
                "summary": "Create a new meat type",
                "operationId": "98bd8247b397355c8a94835d7ea15212",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeatTypeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "MeatType added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "MeatType added successfully"
                                        },
                                        "meattype": {
                                            "$ref": "#/components/schemas/MeatType"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/meattypes/{id}": {
            "put": {
                "tags": [
                    "MeatTypes"
                ],
                "summary": "Update an existing meat type",
                "operationId": "0a704c9877ce5ae78551f05b23a83396",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeatTypeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Meat type updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Meat type updated successfully"
                                        },
                                        "meatType": {
                                            "$ref": "#/components/schemas/MeatType"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Meat type not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "MeatTypes"
                ],
                "summary": "Delete a meat type",
                "operationId": "8d1550ce47ed3b81b5a3df41f4126edf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Meat type deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Meat type deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Meat type not found"
                    }
                }
            }
        },
        "/api/kebabs/{kebab}/pysznepl-refresh-review": {
            "post": {
                "tags": [
                    "Kebabs",
                    "Pyszne"
                ],
                "summary": "Get restaurant rating for a specific kebab",
                "description": "Fetches the rating of a restaurant from Pyszne.pl using the kebab's link.",
                "operationId": "50108b4323dd57eb87d7d6616bda4846",
                "parameters": [
                    {
                        "name": "kebab",
                        "in": "path",
                        "description": "ID of the kebab",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant rating",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "rating": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 4.5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Kebab not found or link missing"
                    },
                    "400": {
                        "description": "Invalid Pyszne.pl link"
                    }
                }
            }
        },
        "/api/admin/reports": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get a list of reports",
                "description": "Returns a list of all reports.",
                "operationId": "63f503c6d57b99a48ba439c9625812ac",
                "responses": {
                    "200": {
                        "description": "List of reports",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Report"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/reports": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Create a new report",
                "description": "Stores a newly created report in the database with the status 'Waiting'.",
                "operationId": "c1de1ab9c8b14a6aecd662f68a247bab",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "kebab_id",
                                    "content"
                                ],
                                "properties": {
                                    "kebab_id": {
                                        "description": "ID of the kebab",
                                        "type": "integer"
                                    },
                                    "content": {
                                        "description": "Content of the report",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Report submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Report submitted successfully"
                                        },
                                        "report": {
                                            "$ref": "#/components/schemas/Report"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admin/reports/{report}": {
            "delete": {
                "tags": [
                    "Reports"
                ],
                "summary": "Delete a report",
                "description": "Removes a report from the database by its ID.",
                "operationId": "b3c83e82cc48d560f124111209b4e083",
                "parameters": [
                    {
                        "name": "report",
                        "in": "path",
                        "description": "ID of the report",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Report removed successfully"
                    },
                    "404": {
                        "description": "Report not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admin/reports/{report}/accept": {
            "put": {
                "tags": [
                    "Reports"
                ],
                "summary": "Accept a report",
                "description": "Changes the report status to 'Accepted'.",
                "operationId": "b5f4a60202fc0c8c6fdd77c98a366eb5",
                "parameters": [
                    {
                        "name": "report",
                        "in": "path",
                        "description": "ID of the report to accept",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report accepted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Report accepted successfully"
                                        },
                                        "report": {
                                            "$ref": "#/components/schemas/Report"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Report not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admin/reports/{report}/refuse": {
            "put": {
                "tags": [
                    "Reports"
                ],
                "summary": "Refuse a report",
                "description": "Changes the report status to 'Refused'.",
                "operationId": "09b5a3558e16153b91b736387d050efc",
                "parameters": [
                    {
                        "name": "report",
                        "in": "path",
                        "description": "ID of the report to refuse",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report refused successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Report refused successfully"
                                        },
                                        "report": {
                                            "$ref": "#/components/schemas/Report"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Report not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/saucetypes": {
            "get": {
                "tags": [
                    "Sauce Types"
                ],
                "summary": "Get all sauce types",
                "description": "Retrieve a list of all sauce types.",
                "operationId": "2b54ee5f7c558ad91502018aaaa07d04",
                "responses": {
                    "200": {
                        "description": "List of sauce types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SauceType"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Sauce Types"
                ],
                "summary": "Add a new sauce type",
                "description": "Create a new sauce type.",
                "operationId": "fafd9611309d0031585b68ac5c555bdf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SauceTypeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sauce type added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "SauceType added successfully"
                                        },
                                        "saucetype": {
                                            "$ref": "#/components/schemas/SauceType"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/saucetypes/{id}": {
            "put": {
                "tags": [
                    "Sauce Types"
                ],
                "summary": "Update a sauce type",
                "description": "Update an existing sauce type.",
                "operationId": "1b9688dd29d6ca6876104130a5a7d9a9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the sauce type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SauceTypeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sauce type updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sauce type updated successfully"
                                        },
                                        "sauceType": {
                                            "$ref": "#/components/schemas/SauceType"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Sauce Types"
                ],
                "summary": "Delete a sauce type",
                "description": "Delete a specific sauce type.",
                "operationId": "62cd580dd672946af518665b35755a31",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the sauce type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SauceType deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "SauceType deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/first-login": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Check if the user is logging in for the first time",
                "description": "Check if the user is logged in for the first time.",
                "operationId": "03799da7396122b7a78855004a6cae04",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "is_first_login": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/{id}": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a user by ID",
                "description": "Delete a user by ID.",
                "operationId": "00c40b388d5872b75d9407acb493bf12",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get the currently authenticated user",
                "description": "Get the currently authenticated user.",
                "operationId": "3671108ef08ef7ba13008db3dfd0a947",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get a user by id",
                "description": "Get a user by id",
                "operationId": "e97fea3915cf8a67543ff86adcbc3f9c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user with this id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/users": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all users",
                "description": "Get all users.",
                "operationId": "7dd4baaf77f85b1282854bf0aa281464",
                "responses": {
                    "200": {
                        "description": "A list of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/change-username": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Change the user's username",
                "description": "Change the user's username.",
                "operationId": "28d3fffb59241595c2ccb870d61ec3e1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "newUsername"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Username updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Username updated successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/change-password": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Change the user's password",
                "description": "Change the user's password.",
                "operationId": "86d9b8863e7776cd61b2af16cbec0f08",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "new_password",
                                    "new_password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "example": "oldpassword"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Current password is incorrect",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Current password is incorrect"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/change-password-first-login": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Change password for the first login",
                "description": "Change the password for the first admin login.",
                "operationId": "23fd9b45ca0e9a95f2d17523ab77809f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "new_password",
                                    "new_password_confirmation"
                                ],
                                "properties": {
                                    "new_password": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Password already changed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Already changed password"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "MeatTypeRequest": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Chicken"
                    }
                },
                "type": "object"
            },
            "SauceType": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Spicy"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "SauceTypeRequest": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Sweet Chili"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "required": [
                    "id",
                    "name",
                    "email",
                    "is_admin",
                    "is_first_login",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "ID of the user",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the user",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email address of the user",
                        "type": "string",
                        "format": "email"
                    },
                    "email_verified_at": {
                        "description": "Email verification timestamp",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "is_admin": {
                        "description": "Indicates if the user is an admin",
                        "type": "boolean"
                    },
                    "is_first_login": {
                        "description": "Indicates if this is the user's first login",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Kebab": {
                "title": "Kebab",
                "description": "Kebab model schema",
                "required": [
                    "id",
                    "name",
                    "address",
                    "status",
                    "is_craft",
                    "building_type",
                    "is_chain"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier for the kebab",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the kebab place",
                        "type": "string"
                    },
                    "address": {
                        "description": "Address of the kebab place",
                        "type": "string"
                    },
                    "coordinates": {
                        "description": "Coordinates of the kebab place",
                        "type": "string"
                    },
                    "logo_link": {
                        "description": "URL to kebab logo",
                        "type": "string",
                        "nullable": true
                    },
                    "open_year": {
                        "description": "Year when the kebab opened",
                        "type": "integer",
                        "nullable": true
                    },
                    "closed_year": {
                        "description": "Year when the kebab closed",
                        "type": "integer",
                        "nullable": true
                    },
                    "status": {
                        "description": "Current status of the kebab place",
                        "type": "string",
                        "enum": [
                            "open",
                            "closed",
                            "under renovation"
                        ]
                    },
                    "pyszne_pl_link": {
                        "description": "Link to pyszne.pl for rating",
                        "type": "string"
                    },
                    "is_craft": {
                        "description": "Indicates if the kebab is a craft kebab",
                        "type": "boolean"
                    },
                    "building_type": {
                        "description": "Type of building the kebab operates in",
                        "type": "string"
                    },
                    "is_chain": {
                        "description": "Indicates if the kebab place is part of a chain",
                        "type": "boolean"
                    },
                    "google_review": {
                        "description": "Google review rating",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "pyszne_pl_review": {
                        "description": "Pyszne.pl review rating",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Record creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Record last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "sauces": {
                        "description": "List of available sauces",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Sauce"
                        }
                    },
                    "meat_types": {
                        "description": "List of available meat types",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MeatType"
                        }
                    },
                    "social_medias": {
                        "description": "List of social media links",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SocialMedia"
                        }
                    },
                    "opening_hour": {
                        "$ref": "#/components/schemas/OpeningHour"
                    },
                    "order_way": {
                        "description": "Available ordering methods",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderWay"
                        }
                    }
                },
                "type": "object"
            },
            "MeatType": {
                "title": "Meat Type",
                "description": "Meat Type model schema",
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier for the meat type",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the meat type",
                        "type": "string"
                    },
                    "pivot": {
                        "description": "Pivot table data",
                        "properties": {
                            "kebab_id": {
                                "description": "Kebab ID",
                                "type": "integer"
                            },
                            "meat_type_id": {
                                "description": "Meat type ID",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "OpeningHour": {
                "title": "Opening Hour",
                "description": "Opening Hour model schema",
                "required": [
                    "id",
                    "kebab_id"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier for the opening hour",
                        "type": "integer"
                    },
                    "kebab_id": {
                        "description": "Kebab ID",
                        "type": "integer"
                    },
                    "monday_open": {
                        "description": "Opening time on Monday",
                        "type": "string",
                        "format": "time"
                    },
                    "monday_close": {
                        "description": "Closing time on Monday",
                        "type": "string",
                        "format": "time"
                    },
                    "tuesday_open": {
                        "description": "Opening time on Tuesday",
                        "type": "string",
                        "format": "time"
                    },
                    "tuesday_close": {
                        "description": "Closing time on Tuesday",
                        "type": "string",
                        "format": "time"
                    },
                    "wednesday_open": {
                        "description": "Opening time on Wednesday",
                        "type": "string",
                        "format": "time"
                    },
                    "wednesday_close": {
                        "description": "Closing time on Wednesday",
                        "type": "string",
                        "format": "time"
                    },
                    "thursday_open": {
                        "description": "Opening time on Thursday",
                        "type": "string",
                        "format": "time"
                    },
                    "thursday_close": {
                        "description": "Closing time on Thursday",
                        "type": "string",
                        "format": "time"
                    },
                    "friday_open": {
                        "description": "Opening time on Friday",
                        "type": "string",
                        "format": "time"
                    },
                    "friday_close": {
                        "description": "Closing time on Friday",
                        "type": "string",
                        "format": "time"
                    },
                    "saturday_open": {
                        "description": "Opening time on Saturday",
                        "type": "string",
                        "format": "time"
                    },
                    "saturday_close": {
                        "description": "Closing time on Saturday",
                        "type": "string",
                        "format": "time"
                    },
                    "sunday_open": {
                        "description": "Opening time on Sunday",
                        "type": "string",
                        "format": "time"
                    },
                    "sunday_close": {
                        "description": "Closing time on Sunday",
                        "type": "string",
                        "format": "time"
                    },
                    "created_at": {
                        "description": "Record creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Record last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "OrderWay": {
                "description": "Order way schema",
                "properties": {
                    "id": {
                        "description": "Order way ID",
                        "type": "integer"
                    },
                    "app_name": {
                        "description": "App name for ordering",
                        "type": "string",
                        "nullable": true
                    },
                    "phone_number": {
                        "description": "Phone number for ordering",
                        "type": "string",
                        "nullable": true
                    },
                    "website": {
                        "description": "Website for ordering",
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Report": {
                "title": "Report",
                "description": "Report model schema",
                "required": [
                    "id",
                    "kebab_id",
                    "user_id",
                    "content",
                    "status"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier for the report",
                        "type": "integer",
                        "example": 1
                    },
                    "kebab_id": {
                        "description": "ID of the kebab being reported",
                        "type": "integer",
                        "example": 42
                    },
                    "user_id": {
                        "description": "ID of the user who created the report",
                        "type": "integer",
                        "example": 5
                    },
                    "content": {
                        "description": "Content of the report",
                        "type": "string",
                        "example": "Kebab seems to have different opening hours than stated."
                    },
                    "status": {
                        "description": "Current status of the report",
                        "type": "string",
                        "enum": [
                            "Waiting",
                            "Accepted",
                            "Refused"
                        ],
                        "example": "Waiting"
                    },
                    "created_at": {
                        "description": "Record creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-12-22T10:55:13.000000Z"
                    },
                    "updated_at": {
                        "description": "Record last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-12-22T11:11:45.000000Z"
                    }
                },
                "type": "object"
            },
            "Sauce": {
                "title": "Sauce",
                "description": "Sauce model schema",
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier for the sauce",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the sauce",
                        "type": "string"
                    },
                    "pivot": {
                        "description": "Pivot table data",
                        "properties": {
                            "kebab_id": {
                                "description": "Kebab ID",
                                "type": "integer"
                            },
                            "sauce_type_id": {
                                "description": "Sauce type ID",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "SocialMedia": {
                "description": "Social media link schema",
                "properties": {
                    "id": {
                        "description": "Social media link ID",
                        "type": "integer"
                    },
                    "link": {
                        "description": "Social media URL",
                        "type": "string",
                        "format": "url"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "MeatTypes",
            "description": "Operations related to Meat Types"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Comments",
            "description": "Comments"
        },
        {
            "name": "Favourites",
            "description": "Favourites"
        },
        {
            "name": "Kebabs",
            "description": "Kebabs"
        },
        {
            "name": "Glovo",
            "description": "Glovo"
        },
        {
            "name": "Google",
            "description": "Google"
        },
        {
            "name": "Pyszne",
            "description": "Pyszne"
        },
        {
            "name": "Reports",
            "description": "Reports"
        },
        {
            "name": "Sauce Types",
            "description": "Sauce Types"
        },
        {
            "name": "User",
            "description": "User"
        },
        {
            "name": "Admin",
            "description": "Admin"
        }
    ]
}